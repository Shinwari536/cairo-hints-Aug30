{
    "attributes": [],
    "builtins": [
        "output",
        "range_check"
    ],
    "data": [
        "0x208b7fff7fff7ffe",
        "0x400380007ffc7ffd",
        "0x482680017ffc8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x48297ffc80007ffd",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
        "0x480a7ffc7fff8000",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x400380007ffc7ffd",
        "0x482680017ffc8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x1",
        "0x4846800180008000",
        "0x2",
        "0x48327fff7ffb8000",
        "0x400180007fff7ffd",
        "0x480a7ffa7fff8000",
        "0x480a80007fff8000",
        "0x482680017ffc8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
        "0x4846800180008000",
        "0x2",
        "0x482480017fff8000",
        "0x1",
        "0x48327fff7ffb8000",
        "0x48127ffc7fff8000",
        "0x480080007ffe8000",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0xa",
        "0x400780017fff8000",
        "0x0",
        "0x400780017fff8001",
        "0x63",
        "0x400780017fff8002",
        "0x1",
        "0x400780017fff8003",
        "0x58",
        "0x400780017fff8004",
        "0x2",
        "0x400780017fff8005",
        "0x42",
        "0x400780017fff8006",
        "0x3",
        "0x400780017fff8007",
        "0x37",
        "0x400780017fff8008",
        "0x4",
        "0x400780017fff8009",
        "0x2c",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
        "0x480a7ffd7fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x5",
        "0x480680017fff8000",
        "0x3",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
        "0x480a7ffc7fff8000",
        "0x48127ffd7fff8000",
        "0x208b7fff7fff7ffe"
    ],
    "debug_info": {
        "file_contents": {},
        "instruction_locations": {
            "0": {
                "accessible_scopes": [
                    "starkware.cairo.lang.compiler.lib.registers",
                    "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 0,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 72,
                    "end_line": 6,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/lang/compiler/lib/registers.cairo"
                    },
                    "start_col": 5,
                    "start_line": 6
                }
            },
            "1": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 1,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn.a": 0,
                        "starkware.cairo.common.math.assert_nn.range_check_ptr": 1
                    }
                },
                "hints": [
                    {
                        "location": {
                            "end_col": 7,
                            "end_line": 44,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "start_col": 5,
                            "start_line": 40
                        },
                        "n_prefix_newlines": 1
                    }
                ],
                "inst": {
                    "end_col": 26,
                    "end_line": 45,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 45
                }
            },
            "2": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 1,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn.a": 0,
                        "starkware.cairo.common.math.assert_nn.range_check_ptr": 2
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 46,
                    "end_line": 46,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 31,
                            "end_line": 39,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 14,
                                    "end_line": 47,
                                    "input_file": {
                                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 47
                                },
                                "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                            ],
                            "start_col": 16,
                            "start_line": 39
                        },
                        "While expanding the reference 'range_check_ptr' in:"
                    ],
                    "start_col": 27,
                    "start_line": 46
                }
            },
            "4": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 1,
                        "offset": 1
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn.a": 0,
                        "starkware.cairo.common.math.assert_nn.range_check_ptr": 2
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 14,
                    "end_line": 47,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 47
                }
            },
            "5": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le.a": 3,
                        "starkware.cairo.common.math.assert_le.b": 4,
                        "starkware.cairo.common.math.assert_le.range_check_ptr": 5
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 31,
                    "end_line": 51,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 31,
                            "end_line": 39,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 21,
                                    "end_line": 52,
                                    "input_file": {
                                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 52
                                },
                                "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                            ],
                            "start_col": 16,
                            "start_line": 39
                        },
                        "While expanding the reference 'range_check_ptr' in:"
                    ],
                    "start_col": 16,
                    "start_line": 51
                }
            },
            "6": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 1
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le.a": 3,
                        "starkware.cairo.common.math.assert_le.b": 4,
                        "starkware.cairo.common.math.assert_le.range_check_ptr": 5
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 20,
                    "end_line": 52,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 15,
                    "start_line": 52
                }
            },
            "7": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 2
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le.a": 3,
                        "starkware.cairo.common.math.assert_le.b": 4,
                        "starkware.cairo.common.math.assert_le.range_check_ptr": 5
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 21,
                    "end_line": 52,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 52
                }
            },
            "9": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 5
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le.a": 3,
                        "starkware.cairo.common.math.assert_le.b": 4,
                        "starkware.cairo.common.math.assert_le.range_check_ptr": 6
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 14,
                    "end_line": 53,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 53
                }
            },
            "10": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 9
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 34,
                    "end_line": 68,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 31,
                            "end_line": 39,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 17,
                                    "end_line": 69,
                                    "input_file": {
                                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 69
                                },
                                "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                            ],
                            "start_col": 16,
                            "start_line": 39
                        },
                        "While expanding the reference 'range_check_ptr' in:"
                    ],
                    "start_col": 19,
                    "start_line": 68
                }
            },
            "11": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 1
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 9
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 37,
                    "end_line": 68,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 16,
                            "end_line": 69,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "start_col": 15,
                            "start_line": 69
                        },
                        "While expanding the reference 'a' in:"
                    ],
                    "start_col": 36,
                    "start_line": 68
                }
            },
            "12": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 2
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 9
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 17,
                    "end_line": 69,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 69
                }
            },
            "14": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 5
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 10
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 37,
                    "end_line": 68,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 16,
                            "end_line": 70,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "start_col": 15,
                            "start_line": 70
                        },
                        "While expanding the reference 'a' in:"
                    ],
                    "start_col": 36,
                    "start_line": 68
                }
            },
            "15": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 6
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 10
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 40,
                    "end_line": 68,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 19,
                            "end_line": 70,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "start_col": 18,
                            "start_line": 70
                        },
                        "While expanding the reference 'b' in:"
                    ],
                    "start_col": 39,
                    "start_line": 68
                }
            },
            "16": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 7
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 10
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 20,
                    "end_line": 70,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 70
                }
            },
            "18": {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn_le"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 14
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn_le.a": 7,
                        "starkware.cairo.common.math.assert_nn_le.b": 8,
                        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": 11
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 14,
                    "end_line": 71,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "start_col": 5,
                    "start_line": 71
                }
            },
            "19": {
                "accessible_scopes": [
                    "starkware.cairo.common.alloc",
                    "starkware.cairo.common.alloc.alloc"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [
                    {
                        "location": {
                            "end_col": 38,
                            "end_line": 3,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                            },
                            "start_col": 5,
                            "start_line": 3
                        },
                        "n_prefix_newlines": 0
                    }
                ],
                "inst": {
                    "end_col": 12,
                    "end_line": 4,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                    },
                    "start_col": 5,
                    "start_line": 4
                }
            },
            "21": {
                "accessible_scopes": [
                    "starkware.cairo.common.alloc",
                    "starkware.cairo.common.alloc.alloc"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 39,
                    "end_line": 5,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                    },
                    "start_col": 5,
                    "start_line": 5
                }
            },
            "22": {
                "accessible_scopes": [
                    "starkware.cairo.common.serialize",
                    "starkware.cairo.common.serialize.serialize_word"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 5,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.serialize.serialize_word.output_ptr": 13,
                        "starkware.cairo.common.serialize.serialize_word.word": 12
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 31,
                    "end_line": 3,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/serialize.cairo"
                    },
                    "start_col": 5,
                    "start_line": 3
                }
            },
            "23": {
                "accessible_scopes": [
                    "starkware.cairo.common.serialize",
                    "starkware.cairo.common.serialize.serialize_word"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 5,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.serialize.serialize_word.output_ptr": 14,
                        "starkware.cairo.common.serialize.serialize_word.word": 12
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 36,
                    "end_line": 4,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/serialize.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 39,
                            "end_line": 2,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/serialize.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 14,
                                    "end_line": 5,
                                    "input_file": {
                                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/serialize.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 5
                                },
                                "While trying to retrieve the implicit argument 'output_ptr' in:"
                            ],
                            "start_col": 21,
                            "start_line": 2
                        },
                        "While expanding the reference 'output_ptr' in:"
                    ],
                    "start_col": 22,
                    "start_line": 4
                }
            },
            "25": {
                "accessible_scopes": [
                    "starkware.cairo.common.serialize",
                    "starkware.cairo.common.serialize.serialize_word"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 5,
                        "offset": 1
                    },
                    "reference_ids": {
                        "starkware.cairo.common.serialize.serialize_word.output_ptr": 14,
                        "starkware.cairo.common.serialize.serialize_word.word": 12
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 14,
                    "end_line": 5,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/serialize.cairo"
                    },
                    "start_col": 5,
                    "start_line": 5
                }
            },
            "26": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 0
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 17,
                    "end_line": 17,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 17
                }
            },
            "28": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 1
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [
                    {
                        "location": {
                            "end_col": 7,
                            "end_line": 43,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 5,
                            "start_line": 21
                        },
                        "n_prefix_newlines": 1
                    }
                ],
                "inst": {
                    "end_col": 38,
                    "end_line": 46,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 20,
                            "end_line": 47,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 12,
                            "start_line": 47
                        },
                        "While expanding the reference 'item.key' in:"
                    ],
                    "start_col": 27,
                    "start_line": 46
                }
            },
            "30": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 2
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 46,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 20,
                            "end_line": 47,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 12,
                            "start_line": 47
                        },
                        "While expanding the reference 'item.key' in:"
                    ],
                    "start_col": 27,
                    "start_line": 46
                }
            },
            "31": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 3
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 26,
                    "end_line": 47,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 47
                }
            },
            "32": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 3
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 16,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 34,
                            "end_line": 68,
                            "input_file": {
                                "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 38,
                                    "end_line": 49,
                                    "input_file": {
                                        "filename": "key_value_constant_time.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 49
                                },
                                "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                            ],
                            "start_col": 19,
                            "start_line": 68
                        },
                        "While expanding the reference 'range_check_ptr' in:"
                    ],
                    "start_col": 23,
                    "start_line": 16
                }
            },
            "33": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 4
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 16,
                    "end_line": 18,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 25,
                            "end_line": 49,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 20,
                            "start_line": 49
                        },
                        "While expanding the reference 'index' in:"
                    ],
                    "start_col": 11,
                    "start_line": 18
                }
            },
            "34": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 5
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 37,
                    "end_line": 49,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 29,
                    "start_line": 49
                }
            },
            "36": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 6
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 49,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 49
                }
            },
            "38": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 22
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 46,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 29,
                            "end_line": 52,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 19,
                            "start_line": 52
                        },
                        "While expanding the reference 'item.value' in:"
                    ],
                    "start_col": 27,
                    "start_line": 46
                }
            },
            "40": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 23
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.__temp2": 24,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 29,
                    "end_line": 52,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 19,
                    "start_line": 52
                }
            },
            "42": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 24
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.__temp2": 24,
                        "__main__.get_value_by_key.__temp3": 25,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 29,
                    "end_line": 52,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 19,
                    "start_line": 52
                }
            },
            "43": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 25
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.__temp2": 24,
                        "__main__.get_value_by_key.__temp3": 25,
                        "__main__.get_value_by_key.__temp4": 26,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 34,
                    "end_line": 68,
                    "input_file": {
                        "filename": "/home/chainz/anaconda3/envs/cairo_venv/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 38,
                            "end_line": 49,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 38,
                                    "end_line": 16,
                                    "input_file": {
                                        "filename": "key_value_constant_time.cairo"
                                    },
                                    "parent_location": [
                                        {
                                            "end_col": 30,
                                            "end_line": 52,
                                            "input_file": {
                                                "filename": "key_value_constant_time.cairo"
                                            },
                                            "start_col": 5,
                                            "start_line": 52
                                        },
                                        "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                    ],
                                    "start_col": 23,
                                    "start_line": 16
                                },
                                "While expanding the reference 'range_check_ptr' in:"
                            ],
                            "start_col": 5,
                            "start_line": 49
                        },
                        "While trying to update the implicit return value 'range_check_ptr' in:"
                    ],
                    "start_col": 19,
                    "start_line": 68
                }
            },
            "44": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 26
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.__temp2": 24,
                        "__main__.get_value_by_key.__temp3": 25,
                        "__main__.get_value_by_key.__temp4": 26,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 29,
                    "end_line": 52,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 19,
                    "start_line": 52
                }
            },
            "45": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 27
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.__temp0": 21,
                        "__main__.get_value_by_key.__temp1": 22,
                        "__main__.get_value_by_key.__temp2": 24,
                        "__main__.get_value_by_key.__temp3": 25,
                        "__main__.get_value_by_key.__temp4": 26,
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.item": 20,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 23,
                        "__main__.get_value_by_key.size": 16
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 30,
                    "end_line": 52,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 52
                }
            },
            "46": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 0
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 17,
                    "end_line": 57,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 57
                }
            },
            "48": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "50": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "52": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "54": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "56": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "58": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "60": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "62": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "64": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "66": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 10,
                    "end_line": 66,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 58
                }
            },
            "68": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 69,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 23,
                    "start_line": 69
                }
            },
            "70": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 12
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 46,
                    "end_line": 56,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 38,
                            "end_line": 16,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 90,
                                    "end_line": 71,
                                    "input_file": {
                                        "filename": "key_value_constant_time.cairo"
                                    },
                                    "start_col": 19,
                                    "start_line": 71
                                },
                                "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                            ],
                            "start_col": 23,
                            "start_line": 16
                        },
                        "While expanding the reference 'range_check_ptr' in:"
                    ],
                    "start_col": 31,
                    "start_line": 56
                }
            },
            "71": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 13
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 72,
                    "end_line": 71,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 41,
                    "start_line": 71
                }
            },
            "72": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 14
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 80,
                    "end_line": 71,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 79,
                    "start_line": 71
                }
            },
            "74": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 15
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 89,
                    "end_line": 71,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 86,
                    "start_line": 71
                }
            },
            "76": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 16
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 28
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 90,
                    "end_line": 71,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 19,
                    "start_line": 71
                }
            },
            "78": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 45
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 31,
                        "__main__.main.value": 32
                    }
                },
                "hints": [
                    {
                        "location": {
                            "end_col": 7,
                            "end_line": 75,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "start_col": 5,
                            "start_line": 72
                        },
                        "n_prefix_newlines": 1
                    }
                ],
                "inst": {
                    "end_col": 29,
                    "end_line": 56,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 29,
                            "end_line": 56,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 13,
                                    "end_line": 76,
                                    "input_file": {
                                        "filename": "key_value_constant_time.cairo"
                                    },
                                    "start_col": 5,
                                    "start_line": 76
                                },
                                "While trying to retrieve the implicit argument 'output_ptr' in:"
                            ],
                            "start_col": 11,
                            "start_line": 56
                        },
                        "While expanding the reference 'output_ptr' in:"
                    ],
                    "start_col": 11,
                    "start_line": 56
                }
            },
            "79": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 46
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 31,
                        "__main__.main.value": 32
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 38,
                    "end_line": 16,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "parent_location": [
                        {
                            "end_col": 90,
                            "end_line": 71,
                            "input_file": {
                                "filename": "key_value_constant_time.cairo"
                            },
                            "parent_location": [
                                {
                                    "end_col": 46,
                                    "end_line": 56,
                                    "input_file": {
                                        "filename": "key_value_constant_time.cairo"
                                    },
                                    "parent_location": [
                                        {
                                            "end_col": 13,
                                            "end_line": 76,
                                            "input_file": {
                                                "filename": "key_value_constant_time.cairo"
                                            },
                                            "start_col": 5,
                                            "start_line": 76
                                        },
                                        "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                    ],
                                    "start_col": 31,
                                    "start_line": 56
                                },
                                "While expanding the reference 'range_check_ptr' in:"
                            ],
                            "start_col": 19,
                            "start_line": 71
                        },
                        "While trying to update the implicit return value 'range_check_ptr' in:"
                    ],
                    "start_col": 23,
                    "start_line": 16
                }
            },
            "80": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 47
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 31,
                        "__main__.main.value": 32
                    }
                },
                "hints": [],
                "inst": {
                    "end_col": 13,
                    "end_line": 76,
                    "input_file": {
                        "filename": "key_value_constant_time.cairo"
                    },
                    "start_col": 5,
                    "start_line": 76
                }
            }
        }
    },
    "hints": {
        "1": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn"
                ],
                "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 1,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn.a": 0,
                        "starkware.cairo.common.math.assert_nn.range_check_ptr": 1
                    }
                }
            }
        ],
        "19": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.alloc",
                    "starkware.cairo.common.alloc.alloc"
                ],
                "code": "memory[ap] = segments.add()",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 0
                    },
                    "reference_ids": {}
                }
            }
        ],
        "28": [
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__.get_value_by_key"
                ],
                "code": "ENTERY_SIZE = ids.KeyValue.SIZE\nKEY_OFFSET = ids.KeyValue.key\nVALUE_OFFSET = ids.KeyValue.value\n\nprint(f'ids.list.address_ = {ids.list.address_}')\nprint(f'ENTERY_SIZE = {ENTERY_SIZE}')\nprint(f\"KEY_OFFSET = {KEY_OFFSET}\")\nprint(f\"VALUE_OFFSET = {VALUE_OFFSET}\")\nprint(\"*********************************************\")\n\nfor i in range(ids.size+1):\n    obj = ids.list.address_\n    addr = ids.list.address_ + ENTERY_SIZE * (i) # this will give us the address of the ** key ** of ith (at index i) object of KeyValue type from the list : KeyValue*\n    print(f'{i}th object key address = {addr}\\t{i}th object key = {memory[addr]}')\n    if memory[addr] == ids.key:\n        ids.index = i\n        break\nelse:\n    raise Exception(\n        f'Key {ids.key} was not found in the list.')",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 6,
                        "offset": 1
                    },
                    "reference_ids": {
                        "__main__.get_value_by_key.index": 19,
                        "__main__.get_value_by_key.key": 17,
                        "__main__.get_value_by_key.list": 15,
                        "__main__.get_value_by_key.range_check_ptr": 18,
                        "__main__.get_value_by_key.size": 16
                    }
                }
            }
        ],
        "78": [
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "code": "print(\"*********************************************\")\nprint(f'value = {ids.value}')",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 45
                    },
                    "reference_ids": {
                        "__main__.main.__fp__": 30,
                        "__main__.main.key_val_tuple": 29,
                        "__main__.main.output_ptr": 27,
                        "__main__.main.range_check_ptr": 31,
                        "__main__.main.value": 32
                    }
                }
            }
        ]
    },
    "identifiers": {
        "__main__.KeyValue": {
            "full_name": "__main__.KeyValue",
            "members": {
                "key": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "value": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "__main__.alloc": {
            "destination": "starkware.cairo.common.alloc.alloc",
            "type": "alias"
        },
        "__main__.assert_nn_le": {
            "destination": "starkware.cairo.common.math.assert_nn_le",
            "type": "alias"
        },
        "__main__.get_fp_and_pc": {
            "destination": "starkware.cairo.common.registers.get_fp_and_pc",
            "type": "alias"
        },
        "__main__.get_value_by_key": {
            "decorators": [],
            "pc": 26,
            "type": "function"
        },
        "__main__.get_value_by_key.Args": {
            "full_name": "__main__.get_value_by_key.Args",
            "members": {
                "key": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "list": {
                    "cairo_type": "__main__.KeyValue*",
                    "offset": 0
                },
                "size": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 3,
            "type": "struct"
        },
        "__main__.get_value_by_key.ImplicitArgs": {
            "full_name": "__main__.get_value_by_key.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.get_value_by_key.Return": {
            "cairo_type": "(value : felt)",
            "type": "type_definition"
        },
        "__main__.get_value_by_key.SIZEOF_LOCALS": {
            "type": "const",
            "value": 1
        },
        "__main__.get_value_by_key.__temp0": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.__temp0",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 2
                    },
                    "pc": 30,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.__temp1": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.__temp1",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 3
                    },
                    "pc": 31,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.__temp2": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.__temp2",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 23
                    },
                    "pc": 40,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.__temp3": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.__temp3",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 24
                    },
                    "pc": 42,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.__temp4": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.__temp4",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 25
                    },
                    "pc": 43,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.index": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.index",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 1
                    },
                    "pc": 28,
                    "value": "[cast(fp, felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.item": {
            "cairo_type": "__main__.KeyValue",
            "full_name": "__main__.get_value_by_key.item",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 1
                    },
                    "pc": 28,
                    "value": "[cast([fp + (-5)] + [fp] * 2, __main__.KeyValue*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.key": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.key",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 26,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.list": {
            "cairo_type": "__main__.KeyValue*",
            "full_name": "__main__.get_value_by_key.list",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 26,
                    "value": "[cast(fp + (-5), __main__.KeyValue**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 26,
                    "value": "[cast(fp + (-6), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 22
                    },
                    "pc": 38,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.get_value_by_key.size": {
            "cairo_type": "felt",
            "full_name": "__main__.get_value_by_key.size",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 26,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main": {
            "decorators": [],
            "pc": 46,
            "type": "function"
        },
        "__main__.main.Args": {
            "full_name": "__main__.main.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.ImplicitArgs": {
            "full_name": "__main__.main.ImplicitArgs",
            "members": {
                "output_ptr": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "__main__.main.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.main.SIZEOF_LOCALS": {
            "type": "const",
            "value": 10
        },
        "__main__.main.__fp__": {
            "cairo_type": "felt*",
            "full_name": "__main__.main.__fp__",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 12
                    },
                    "pc": 70,
                    "value": "[cast(ap + (-2), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.key_val_tuple": {
            "cairo_type": "(__main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue)",
            "full_name": "__main__.main.key_val_tuple",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 10
                    },
                    "pc": 68,
                    "value": "[cast(fp, (__main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue)*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.output_ptr": {
            "cairo_type": "felt*",
            "full_name": "__main__.main.output_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 46,
                    "value": "[cast(fp + (-4), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.main.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 46,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 45
                    },
                    "pc": 78,
                    "value": "[cast(ap + (-2), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.value": {
            "cairo_type": "felt",
            "full_name": "__main__.main.value",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 45
                    },
                    "pc": 78,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.serialize_word": {
            "destination": "starkware.cairo.common.serialize.serialize_word",
            "type": "alias"
        },
        "starkware.cairo.common.alloc.alloc": {
            "decorators": [],
            "pc": 19,
            "type": "function"
        },
        "starkware.cairo.common.alloc.alloc.Args": {
            "full_name": "starkware.cairo.common.alloc.alloc.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
            "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.Return": {
            "cairo_type": "(ptr : felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_le": {
            "decorators": [],
            "pc": 5,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_le.Args": {
            "full_name": "starkware.cairo.common.math.assert_le.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_le.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 5,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 5,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 5,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 5
                    },
                    "pc": 9,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn": {
            "decorators": [],
            "pc": 1,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_nn.Args": {
            "full_name": "starkware.cairo.common.math.assert_nn.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_nn.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 1,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 1,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 2,
                    "value": "cast([fp + (-4)] + 1, felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn_le": {
            "decorators": [],
            "pc": 10,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_nn_le.Args": {
            "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn_le.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_nn_le.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn_le.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 10,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn_le.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn_le.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 10,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 10,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 5
                    },
                    "pc": 14,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 14
                    },
                    "pc": 18,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.registers.get_ap": {
            "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
            "type": "alias"
        },
        "starkware.cairo.common.registers.get_fp_and_pc": {
            "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
            "type": "alias"
        },
        "starkware.cairo.common.serialize.serialize_word": {
            "decorators": [],
            "pc": 22,
            "type": "function"
        },
        "starkware.cairo.common.serialize.serialize_word.Args": {
            "full_name": "starkware.cairo.common.serialize.serialize_word.Args",
            "members": {
                "word": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.serialize.serialize_word.ImplicitArgs": {
            "full_name": "starkware.cairo.common.serialize.serialize_word.ImplicitArgs",
            "members": {
                "output_ptr": {
                    "cairo_type": "felt*",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.serialize.serialize_word.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.serialize.serialize_word.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.serialize.serialize_word.output_ptr": {
            "cairo_type": "felt*",
            "full_name": "starkware.cairo.common.serialize.serialize_word.output_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 22,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 23,
                    "value": "cast([fp + (-4)] + 1, felt*)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.serialize.serialize_word.word": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.serialize.serialize_word.word",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 22,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
            "decorators": [],
            "pc": 0,
            "type": "function"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
            "cairo_type": "(fp_val : felt*, pc_val : felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
        "references": [
            {
                "ap_tracking_data": {
                    "group": 1,
                    "offset": 0
                },
                "pc": 1,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 1,
                    "offset": 0
                },
                "pc": 1,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 1,
                    "offset": 0
                },
                "pc": 2,
                "value": "cast([fp + (-4)] + 1, felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 0
                },
                "pc": 5,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 0
                },
                "pc": 5,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 0
                },
                "pc": 5,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 5
                },
                "pc": 9,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 0
                },
                "pc": 10,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 0
                },
                "pc": 10,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 0
                },
                "pc": 10,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 5
                },
                "pc": 14,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 14
                },
                "pc": 18,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 22,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 22,
                "value": "[cast(fp + (-4), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 23,
                "value": "cast([fp + (-4)] + 1, felt*)"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 26,
                "value": "[cast(fp + (-5), __main__.KeyValue**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 26,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 26,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 26,
                "value": "[cast(fp + (-6), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 1
                },
                "pc": 28,
                "value": "[cast(fp, felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 1
                },
                "pc": 28,
                "value": "[cast([fp + (-5)] + [fp] * 2, __main__.KeyValue*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 2
                },
                "pc": 30,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 3
                },
                "pc": 31,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 22
                },
                "pc": 38,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 23
                },
                "pc": 40,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 24
                },
                "pc": 42,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 25
                },
                "pc": 43,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 0
                },
                "pc": 46,
                "value": "[cast(fp + (-4), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 0
                },
                "pc": 46,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 10
                },
                "pc": 68,
                "value": "[cast(fp, (__main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue, __main__.KeyValue)*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 12
                },
                "pc": 70,
                "value": "[cast(ap + (-2), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 45
                },
                "pc": 78,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 45
                },
                "pc": 78,
                "value": "[cast(ap + (-1), felt*)]"
            }
        ]
    }
}
